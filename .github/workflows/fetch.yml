name: Fetch Market Data
on:
  schedule:
    - cron: "*/10 * * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Show HEAD (diagnostics)
        run: |
          echo "HEAD commit:" 
          git log -1 --oneline
          echo "CWD=$(pwd)"
          ls -la

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install yfinance pyyaml pandas

      - name: Generate quotes.json inline (no fetch.py)
        run: |
          mkdir -p data
          python - <<'PY'
          import json, yaml, os
          from datetime import datetime, timezone
          import yfinance as yf

          # read symbols.yaml from repo root
          with open("symbols.yaml","r") as f:
              uni = yaml.safe_load(f)["universe"]

          def last_price(ticker):
              t = yf.Ticker(ticker)
              df = None
              try:
                  df = t.history(period="1d", interval="1m")
              except Exception:
                  df = None
              if df is None or df.empty:
                  try:
                      df = t.history(period="5d", interval="5m")
                  except Exception:
                      df = None
              if df is None or df.empty:
                  try:
                      df = t.history(period="1mo", interval="1d")
                  except Exception:
                      df = None
              if df is None or df.empty:
                  return None, None
              last = df.tail(1)
              try:
                  ts = last.index[0].tz_convert("UTC").isoformat()
              except Exception:
                  ts = datetime.now(timezone.utc).isoformat()
              return float(last["Close"].iloc[0]), ts

          quotes = []
          for it in uni:
              px, ts = last_price(it["query"])
              if px is None: 
                  continue
              quotes.append({
                  "id": it["id"],
                  "asset_class": it["asset_class"],
                  "source": it["source"],
                  "query": it["query"],
                  "price": px,
                  "ts": ts
              })

          out = {"generated_at": datetime.now(timezone.utc).isoformat(), "quotes": quotes}
          os.makedirs("data", exist_ok=True)
          with open("data/quotes.json","w") as f:
              json.dump(out, f, indent=2)
          print("Wrote data/quotes.json with", len(quotes), "quotes")
          PY

      - name: Show output snippet
        run: |
          echo "quotes.json preview:"
          head -n 40 data/quotes.json || true

      - name: Commit & push JSON
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/quotes.json
          git commit -m "update data" || echo "No changes"
          git push
